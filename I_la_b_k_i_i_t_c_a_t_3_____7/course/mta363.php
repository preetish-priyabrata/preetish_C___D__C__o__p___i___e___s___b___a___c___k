<div id="course-content">    <div class="row gutter"><!-- row -->        <div class="col-lg-12 col-md-12">            <h1 class="page-title">Web Development Fundamentals &nbsp;&nbsp;<small>98-363</small></h1><!-- category title -->        </div>    </div>    <hr/>    <div class = "panel panel-default">        <div class = "panel-heading">            <h4 class = "panel-title">                <a href = "#collapseOne" data-parent = "#accordion" data-toggle = "collapse" class = "accordion-toggle">                    The Basics                </a>            </h4>        </div>        <div class = "panel-collapse collapse" id = "collapseOne">            <div class = "panel-body">                <p>                    This exam is designed to assess candidates’ knowledge of fundamental networking concepts. MTA is a new certification under the Microsoft                     Certification Program that validates the foundational knowledge needed to begin building a career in Microsoft technologies. It can also                     serve as a stepping stone to the Microsoft Certified Technology Specialist exams. Successful candidates for this exam will earn an MTA                     certification as well as access to benefits of the Microsoft Certification Program.<br /><br />                    We are specifying an item pool of 75 unique multiple-choice items, which will be used on 1 form. For more information about cognitive levels, refer to                    the Cognitive Domain in Bloom’s Taxonomy.<br />                    Categories in the cognitive domain of Bloom's Taxonomy (Anderson & Krathwohl, 2001)<br /><br />                    The following anatomy is required of each knowledge-level item in this exam: <br />                    Question Statement (ex: What should you do?) <br />                    Answer Choices (Preferably Multiple Choice, choose 1, with 3 distracters)<br />                    o Ex: Which of the following is a valid ASP.NET variable name? A. _foo; B. &foo; C. foo#; D. foo 1<br /><br />                    The following anatomy is required of each application-level item in this exam: <br />                    Concise scenario, including any constraints/requirements necessary to make distracter answers 100% incorrect <br />                    Goal Statement ( You need to …) <br />                    Question Statement (ex: What should you do?) <br />                    Answer Choices (Preferably Multiple Choice, choose 1, with 3 distracters)                </p>             </div>        </div>    </div>    <div class = "panel panel-default">        <div class = "panel-heading">            <h4 class = "panel-title">                <a href = "#collapseTwo" data-parent = "#accordion" data-toggle = "collapse" class = "accordion-toggle">                    Target Audience                </a>            </h4>        </div>        <div class = "panel-collapse collapse" id = "collapseTwo">            <div class = "panel-body">                <p>                    Candidates for this exam are seeking to prove knowledge of and skills in creating Web-based applications by using Microsoft® Visual                    Studio® 2008, the Microsoft .NET Framework 3.5, and managed code. Before taking this exam, candidates should have a solid foundational                    knowledge of the topics outlined in this preparation guide. It is recommended that candidates be familiar with the concepts of and have                    hands-on experience with the technologies described here by following a prescribed curriculum that maps to the exam or by working with                     tutorials and samples available on MSDN® and in Visual Studio. Candidates are expected to have some experience with a .NET language,                    such as C# or Microsoft Visual Basic®.NET. Candidates should also have a basic understanding of HTML syntax and usage.<br /><br />                    Candidates for this exam are in the process of expanding their knowledge and job-related skills in the following areas: <br />                    Web-based application development fundamentals <br />                    Creating Microsoft ASP.NET applications by using server-side and client-side coding techniques and tools <br />                    Web application event model <br />                    Web services and communications with services <br />                    Accessing and display data in a Web application<br />                    Deploying and host Web applications by using Internet Information Services (IIS)<br />                    Configuration options for ASP.NET applications<br /><br />                    NOTE TO ITEM WRITERS: Items should be version agnostic if at all possible. In some cases, you may need to specify a version in the stem, but try to                     avoid this because more than one version of a product is available via DreamSpark.                </p>             </div>        </div>    </div>    <div class = "panel panel-default">        <div class = "panel-heading">            <h4 class = "panel-title">                <a href = "#collapseThree" data-parent = "#accordion" data-toggle = "collapse" class = "accordion-toggle">                    Objective Domain                </a>            </h4>        </div>        <div class = "panel-collapse collapse" id = "collapseThree">            <div class = "panel-body">                <p>                    Programming Web Applications                    1.1. Customize the layout and appearance of a Web page.                    This objective may include but is not limited to: HTML, CSS, tables, embedding images, page layout for navigation                    1.2. Understand ASP.NET intrinsic objects.                    This objective may include but is not limited to: Request, Server, Application, Session, Response, HttpContext                    1.3. Understand state information in Web applications.                    This objective may include but is not limited to: how state is stored based on application design and hardware; different types such as session state, view state, control state, and application state                    1.4. Understand events and control page flow.                    This objective may include but is not limited to: application and page life cycle events; page events; control events; application events; session events; cross-page posting; Response.Redirect; Server.Transfer; IsPostBack; setting AutoEventWireup                    1.5. Understand controls.                    This objective may include but is not limited to: various types of controls, including user, server, Web, and validation; know which is the appropriate type of control for a scenario                    1.6. Understand configuration files.                    This objective may include but is not limited to: use of web.config and machine.config and the settings that can be made                    2. Working with Data and Services                    2.1. Read and write XML data.                    This objective may include but is not limited to: XML, XML validation                    This objective does not include: Web Services, XPath syntax, XmlDocument, XPathNavigator, XPathNodeIterator, XPathDocument, XmlReader, XmlWriter, XmlDataDocument, XmlNamespaceManager                    2.2. Distinguish between DataSet objects and DataReader objects.                    This objective may include but is not limited to: choose which data object to use based on application requirements/design                    2.3. Call a service from a Web page.                    This objective may include but is not limited to: creating a basic Windows Communication Foundation (WCF) Service or Web Service so that it can be consumed; App_WebReferences; <system.serviceModel> configuration                    2.4. Understand DataSource controls.                    This objective may include but is not limited to: LinqDataSource, ObjectDataSource, XmlDataSource, SqlDataSource                    2.5. Bind controls to data by using data-binding syntax.                    This objective may include but is not limited to: ensure that data is updated and displayed in data-aware controls                    2.6. Manage data connections and databases.                    This objective may include but is not limited to: database connections; connection objects; connection pools; transaction objects                    3. Troubleshooting and Debugging Web Applications                    3.1. Debug a Web application.                    This objective may include but is not limited to: use in conjunction with custom error pages to display appropriate error information to the appropriate user; implementing tracing of a Web application, Trace.axd, Trace=True on @Page directive, <trace enabled=”true”/>                    3.2. Handle Web application errors.                    This objective may include but is not limited to: HTTP error codes                    4. Working with Client-Side Scripting                    4.1. Understand client-side scripting.                    This objective may include but is not limited to: purpose of client-side scripting, various client-side scripting languages                    4.2. Understand AJAX concepts.                    This objective may include but is not limited to: ASP.NET AJAX implementation, working with client-side libraries , EnablePartialRendering, Triggers, ChildrenAsTriggers, Scripts, Services, UpdateProgress, Timer, ScriptManagerProxy, extender controls                    5. Configuring and Deploying Web Applications                    5.1. Configure authentication and authorization.                    This objective may include but is not limited to: Forms Authentication, Windows Authentication; authorization; file authorization; impersonation                    This objective does not include: Windows CardSpace™ authentication, Passport (Windows Live™ ID) authentication, Custom authentication                    5.2. Configure projects and solutions and reference assemblies.                    This objective may include but is not limited to: local assemblies, shared assemblies (GAC), Web application projects and solutions; configuration files; AppSettings                    5.3. Publish Web applications.                    This objective may include but is not limited to: choosing the method to deploy an application based on the existing or intended environment; updatable vs. not updatable; MSI deployment; IIS installation and configuration                    5.4. Understand application pools.                    This objective may include but is not limited to: purpose of application pools; effect of application pools on Web applications                    This objective does not include: configuring or assigning application pools                    </p>             </div>        </div>    </div></div><div id="content">    <!-- title -->    <div id="page-title">        <span class="title"></span>        <span class="subtitle">MTA :98-363</span>    </div>    <!-- ENDS title -->    <!-- page-content -->    <div id="page-content">        <h6 class="toggle-trigger"><a href="#">Objective Domain - </a></h6>        <div class="toggle-container">            <div class="block">                <p>                </p>            </div>        </div>          <h6 class="toggle-trigger"><a href="#">Objective Domain - </a></h6>        <div class="toggle-container">            <div class="block">                <p>                </p>            </div>        </div>          <h6 class="toggle-trigger"><a href="#">Objective Domain - </a></h6>        <div class="toggle-container">            <div class="block">                <p>                </p>            </div>        </div>          <h6 class="toggle-trigger"><a href="#">Objective Domain - </a></h6>        <div class="toggle-container">            <div class="block">                <p>                </p>            </div>        </div>      </div></div>